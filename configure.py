#!/usr/bin/env python3

###
# Generates build files for the project.
# This file also includes the project configuration,
# such as compiler flags and the object matching status.
#
# Usage:
#   python3 configure.py
#   ninja
#
# Append --help to see available options.
###

import argparse
import sys
from pathlib import Path
from typing import Any, Dict, List

from tools.project import (
    Object,
    ProjectConfig,
    calculate_progress,
    generate_build,
    is_windows,
)

# Game versions
DEFAULT_VERSION = 0
VERSIONS = [
    "SX4J01",  # 0
]

parser = argparse.ArgumentParser()
parser.add_argument(
    "mode",
    choices=["configure", "progress"],
    default="configure",
    help="script mode (default: configure)",
    nargs="?",
)
parser.add_argument(
    "-v",
    "--version",
    choices=VERSIONS,
    type=str.upper,
    default=VERSIONS[DEFAULT_VERSION],
    help="version to build",
)
parser.add_argument(
    "--build-dir",
    metavar="DIR",
    type=Path,
    default=Path("build"),
    help="base build directory (default: build)",
)
parser.add_argument(
    "--binutils",
    metavar="BINARY",
    type=Path,
    help="path to binutils (optional)",
)
parser.add_argument(
    "--compilers",
    metavar="DIR",
    type=Path,
    help="path to compilers (optional)",
)
parser.add_argument(
    "--map",
    action="store_true",
    help="generate map file(s)",
)
parser.add_argument(
    "--no-asm",
    action="store_true",
    help="don't incorporate .s files from asm directory",
)
parser.add_argument(
    "--debug",
    action="store_true",
    help="build with debug info (non-matching)",
)
if not is_windows():
    parser.add_argument(
        "--wrapper",
        metavar="BINARY",
        type=Path,
        help="path to wibo or wine (optional)",
    )
parser.add_argument(
    "--dtk",
    metavar="BINARY | DIR",
    type=Path,
    help="path to decomp-toolkit binary or source (optional)",
)
parser.add_argument(
    "--sjiswrap",
    metavar="EXE",
    type=Path,
    help="path to sjiswrap.exe (optional)",
)
parser.add_argument(
    "--verbose",
    action="store_true",
    help="print verbose output",
)
parser.add_argument(
    "--non-matching",
    dest="non_matching",
    action="store_true",
    help="builds equivalent (but non-matching) or modded objects",
)
args = parser.parse_args()

config = ProjectConfig()
config.version = str(args.version)
version_num = VERSIONS.index(config.version)

# Apply arguments
config.build_dir = args.build_dir
config.dtk_path = args.dtk
config.binutils_path = args.binutils
config.compilers_path = args.compilers
config.debug = args.debug
config.generate_map = args.map
config.non_matching = args.non_matching
config.sjiswrap_path = args.sjiswrap
if not is_windows():
    config.wrapper = args.wrapper
if args.no_asm:
    config.asm_dir = None

# Tool versions
config.binutils_tag = "2.42-1"
config.compilers_tag = "20231018"
config.dtk_tag = "v0.9.0"
config.sjiswrap_tag = "v1.1.1"
config.wibo_tag = "0.6.11"

# Project
config.config_path = Path("config") / config.version / "config.yml"
config.check_sha_path = Path("config") / config.version / "build.sha1"
config.asflags = [
    "-mgekko",
    "--strip-local-absolute",
    "-I include",
    f"-I build/{config.version}/include",
    f"--defsym version={version_num}",
]
config.linker_console = "Wii"
config.linker_version = "1.1"
config.ldflags = [
    "-fp hardware",
    "-nodefaults",
    # "-warn off",
    # "-listclosure", # Uncomment for Wii linkers
]
# Use for any additional files that should cause a re-configure when modified
config.reconfig_deps = []

# Base flags, common to most GC/Wii games.
# Generally leave untouched, with overrides added below.
cflags_base = [
    "-nodefaults",
    "-proc gekko",
    "-align powerpc",
    "-enum int",
    "-fp hardware",
    "-Cpp_exceptions off",
    # "-W all",
    "-O4,p",
    "-inline auto",
    '-pragma "cats off"',
    '-pragma "warn_notinlined off"',
    "-maxerrors 1",
    "-nosyspath",
    "-RTTI off",
    "-fp_contract on",
   #"-str reuse",
    "-enc SJIS",
    "-I-",
    "-i include",
    "-i libs/RVL_SDK/include/",
    "-i libs/PowerPC_EABI_Support/include/stl",
    "-i libs/nw4r/include/",
    "-i libs/monolib/include/",
    "-i src/",
    "-i libs/NdevExi2A/include/",
    "-i libs/PowerPC_EABI_Support/include/",
    f"-i build/{config.version}/include",
    f"-DVERSION={version_num}",
]

# Debug flags
if config.debug:
    cflags_base.extend(["-sym on", "-DDEBUG=1"])
else:
    cflags_base.append("-DNDEBUG=1")

# Game/Monolithlib Flags
cflags_game = [
    *cflags_base,
    "-ipa file",
    "-inline auto",
    "-use_lmw_stmw on",
    "-str reuse,pool,readonly",
    "-RTTI on",
    "-Cpp_exceptions on",
]

# Metrowerks library flags
cflags_runtime = [
    *cflags_base,
    "-use_lmw_stmw on",
    "-str reuse,pool,readonly",
    "-inline on",
]

cflags_mslc = [
    *cflags_base,
    "-use_lmw_stmw on",
    "-str reuse,pool,readonly",
    "-inline on",
    "-ipa file",
]

cflags_trk = [
    *cflags_base,
    "-use_lmw_stmw on",
    "-inline on",
]

# Dolphin library flags
cflags_sdk = [
    *cflags_base,
    "-inline auto",
    "-ipa file",
    "-func_align 16",
]

# Ndev flags
cflags_ndev = [
    *cflags_base,
    "-inline auto",
    "-ipa file",
]


# nw4r flags
cflags_nw4r = [
    *cflags_base,
    "-inline auto",
    "-use_lmw_stmw on",
]

# Criware flags
cflags_criware = [
    *cflags_base,
    "-sdata 0",
    "-sdata2 0",
    "-use_lmw_stmw on",
    "-i libs/CriWare/src/",
]

# Helper function for Dolphin libraries
def DolphinLib(lib_name: str, objects: List[Object], extra_cflags=[]) -> Dict[str, Any]:
    return {
        "lib": lib_name,
        "mw_console": "Wii",
        "mw_version": "1.1",
        "root_dir": "libs/RVL_SDK",
        "cflags": cflags_sdk + extra_cflags,
        "host": False,
        "objects": objects,
    }

def criwareLib(lib_name, objects, extra_cflags=[]):
    return {
        "lib": lib_name,
        "mw_console": "GC",
        "mw_version": "3.0",
        "root_dir": "libs/CriWare",
        "cflags": cflags_criware + extra_cflags,
        "host": False,
        "objects": objects,
    }

def nw4rLib(lib_name, objects, extra_cflags=[]):
    return {
        "lib": lib_name,
        "mw_console": "GC",
        "mw_version": "3.0",
        "root_dir": "libs/nw4r",
        "cflags": cflags_nw4r + extra_cflags,
        "host": False,
        "objects": objects,
    }


Matching = True                   # Object matches and should be linked
NonMatching = False               # Object does not match and should not be linked
Equivalent = config.non_matching  # Object should be linked when configured with --non-matching

config.warn_missing_config = True
config.warn_missing_source = False
config.libs = [
    {
        "lib": "kyoshin",
        "mw_console": "Wii",
        "mw_version": "1.1",
        "root_dir": "",
        "cflags": cflags_game,
        "host": True,
        "objects": [
            Object(NonMatching, "kyoshin/appgame/CGame"),
            Object(Matching, "kyoshin/appgame/main"),
            Object(Matching, "kyoshin/appgame/plugin/pluginDeb"),
            Object(Matching, "kyoshin/appgame/plugin/pluginWait"),
            Object(NonMatching, "kyoshin/appgame/plugin/ocBuiltin"),
            Object(NonMatching, "kyoshin/appgame/plugin/ocThread"),
            Object(NonMatching, "kyoshin/appgame/plugin/ocMsg"),
            Object(NonMatching, "kyoshin/appgame/plugin/ocBdat"),
            Object(NonMatching, "kyoshin/appgame/plugin/ocUnit"),
            Object(NonMatching, "kyoshin/appgame/CTaskGame"),
            Object(NonMatching, "kyoshin/appgame/cf/CTaskGameCf"),
            Object(NonMatching, "kyoshin/appgame/CTaskGameEff"),
            Object(NonMatching, "kyoshin/appgame/plugin/ocCfp"),
            Object(Matching, "kyoshin/appgame/plugin/pluginMain"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginUi"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginEve"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginCfs"),
            Object(Matching, "kyoshin/appgame/plugin/pluginMath"),
            Object(NonMatching, "kyoshin/action/CActParamAnim"),
            Object(NonMatching, "kyoshin/action/CActParamData"),
            Object(NonMatching, "kyoshin/appgame/cf/CMcaFile"),
            Object(NonMatching, "kyoshin/appgame/cf/CTaskEnvironment"),
            Object(NonMatching, "kyoshin/appgame/CTimeLightGrp"),
            Object(NonMatching, "kyoshin/appgame/cf/CActParamAnimGame"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginCam"),
            Object(NonMatching, "kyoshin/appgame/cf/CTaskGameEffAfter"),
            Object(Matching, "kyoshin/appgame/plugin/pluginPad"),
            Object(NonMatching, "kyoshin/appgame/cf/CfRes"),
            Object(NonMatching, "kyoshin/appgame/cf/IResInfo"),
            Object(NonMatching, "kyoshin/appgame/cf/CfScript"),
            Object(NonMatching, "kyoshin/appgame/cf/CfTaskMain"),
            Object(NonMatching, "kyoshin/appgame/cf/CfTFile"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCamEvent"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCamDirectionIntf"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCamLookatIntf"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCamTargetIntf"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCam"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCamEvent_1"),
            Object(NonMatching, "kyoshin/appgame/code_8007C0F8"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlEnemy"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlMoveBase"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlMoveEne"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlNpc"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlPc"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlRemote"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlObjectParam"),
            Object(NonMatching, "kyoshin/appgame/code_800A3B24"),
            Object(NonMatching, "kyoshin/appgame/code_800AA008"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCollCircleImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCollSphereImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCollAABBImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCollCylinderImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfCollCapsuleImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectColl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectEff"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectEne"),
            Object(NonMatching, "kyoshin/appgame/code_800B06A4"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectMap"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectModel"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectMove"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectNpc"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectObj"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectPc"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectPoint"),
            Object(NonMatching, "kyoshin/appgame/cf/code_800C17DC"),
            Object(NonMatching, "kyoshin/cfsys/CfObjectImplWalker"),
            Object(NonMatching, "kyoshin/cfsys/CfObjectImplPc"),
            Object(NonMatching, "kyoshin/cfsys/CfObjectImplObj"),
            Object(NonMatching, "kyoshin/cfsys/CfObjectImplNpc"),
            Object(NonMatching, "kyoshin/cfsys/CfObjectImplMove"),
            Object(NonMatching, "kyoshin/cfsys/CfObjectImplEne"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlAct"),
            Object(NonMatching, "kyoshin/appgame/cf/CBattleManager"),
            Object(NonMatching, "kyoshin/appgame/cf/code_800F42AC"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectEnumList"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectSelectorObj"),
            Object(NonMatching, "kyoshin/appgame/CMainMenu"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuArtsSelect"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuBattleDamage"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuBattlePlayerState"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuEnemyState"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuFade"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuKeyAssign"),
            Object(NonMatching, "kyoshin/appgame/CMiniMap"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuQuestLog"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuSymbolMark"),
            Object(NonMatching, "kyoshin/appgame/CQuestWindow"),
            Object(NonMatching, "kyoshin/appgame/CSystemWindow"),
            Object(NonMatching, "kyoshin/appgame/CSysWinSelect"),
            Object(NonMatching, "kyoshin/appgame/CTagProcessor"),
            Object(NonMatching, "kyoshin/appgame/CTalkWindow"),
            Object(NonMatching, "kyoshin/appgame/CUIBattleManager"),
            Object(NonMatching, "kyoshin/appgame/CUICfManager"),
            Object(NonMatching, "kyoshin/appgame/code_80135FDC"),
            Object(NonMatching, "kyoshin/appgame/CUIWindowManager"),
            Object(NonMatching, "kyoshin/appgame/cf/CfBdat"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuUpdate"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuLandTelop"),
            Object(NonMatching, "kyoshin/appgame/cf/CBattleState"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuGetItem"),
            Object(NonMatching, "kyoshin/appgame/cf/CAIAction"),
            Object(NonMatching, "kyoshin/appgame/cf/CArtsSet"),
            Object(NonMatching, "kyoshin/appgame/cf/CArtsParam"),
            Object(NonMatching, "kyoshin/appgame/cf/CItem"),
            Object(NonMatching, "kyoshin/appgame/cf/CCharEffect"),
            Object(NonMatching, "kyoshin/appgame/cf/CCharEffectEne"),
            Object(NonMatching, "kyoshin/appgame/CCol6System"),
            Object(NonMatching, "kyoshin/appgame/CCol6Invite"),
            Object(NonMatching, "kyoshin/appgame/cf/CTaskREvent"),
            Object(NonMatching, "kyoshin/appgame/cf/CInfoCf"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuItem"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtMem"),
            Object(NonMatching, "kyoshin/appgame/cf/CTaskREvtSequence"),
            Object(NonMatching, "kyoshin/appgame/cf/CfResObjImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfResReloadImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/CfMapEffectManager"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectActor"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtModel"),
            Object(NonMatching, "kyoshin/appgame/cf/CfMapItemManager"),
            Object(NonMatching, "kyoshin/appgame/cf/CActorParam"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuZeal"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtCamera"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtModelMap"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtModelObj"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtModelPc"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtEffect"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtObj"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginTime"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginBtl"),
            Object(NonMatching, "kyoshin/appgame/code_801862C0"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuPTGauge"),
            Object(NonMatching, "kyoshin/appgame/menu/code_80187F14"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuSelectShop"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuShopSell"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuShopBuy"),
            Object(NonMatching, "kyoshin/appgame/menu/code_8018C5FC"),
            Object(NonMatching, "kyoshin/appgame/cf/CfResPcImpl"),
            Object(NonMatching, "kyoshin/appgame/cf/code_8018F8D8"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuPTState"),
            Object(NonMatching, "kyoshin/appgame/cf/CPartsChange"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlMovePC"),
            Object(NonMatching, "kyoshin/appgame/cf/CtrlMoveNpc"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuBattleMode"),
            Object(NonMatching, "kyoshin/appgame/COccCulling"),
            Object(NonMatching, "kyoshin/appgame/CSimpleEveTalkWin"),
            Object(NonMatching, "kyoshin/appgame/cf/CTaskCulling"),
            Object(NonMatching, "kyoshin/appgame/cf/CVision"),
            Object(NonMatching, "kyoshin/appgame/code_801A929C"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginSnd"),
            Object(Matching, "kyoshin/appgame/plugin/pluginGame"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuVision"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuBattleCommu"),
            Object(NonMatching, "kyoshin/appgame/cf/CPcEffect07"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuGetItemMulti"),
            Object(NonMatching, "kyoshin/appgame/cf/CSuddenCommu"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuKizunaTalk"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuItemExchange"),
            Object(NonMatching, "kyoshin/appgame/cf/CfSoundMan"),
            Object(NonMatching, "kyoshin/appgame/cf/CfPadTask"),
            Object(NonMatching, "kyoshin/appgame/cf/code_801C2C14"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtLight"),
            Object(NonMatching, "kyoshin/appgame/CBgTex"),
            Object(NonMatching, "kyoshin/appgame/CTitleAHelp"),
            Object(NonMatching, "kyoshin/appgame/CItemBoxGrid"),
            Object(NonMatching, "kyoshin/appgame/CCur"),
            Object(NonMatching, "kyoshin/appgame/CSortMenu"),
            Object(NonMatching, "kyoshin/appgame/CItemBoxInfo"),
            Object(NonMatching, "kyoshin/appgame/CNumSelect"),
            Object(NonMatching, "kyoshin/appgame/CItemBoxLine"),
            Object(NonMatching, "kyoshin/appgame/CScrollBar"),
            Object(NonMatching, "kyoshin/appgame/code_801F3BE0"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickObject"),
            Object(NonMatching, "kyoshin/appgame/cf/CfObjectTbox"),
            Object(NonMatching, "kyoshin/appgame/cf/CfResTboxImpl"),
            Object(NonMatching, "kyoshin/appgame/CPartyStateWin"),
            Object(NonMatching, "kyoshin/appgame/CModelDisp"),
            Object(NonMatching, "kyoshin/appgame/CPartyState"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginUnit"),
            Object(NonMatching, "kyoshin/appgame/menu/parts/CModelDispEquip"),
            Object(NonMatching, "kyoshin/appgame/CEquipChange"),
            Object(NonMatching, "kyoshin/appgame/cf/CfMapMineManager"),
            Object(NonMatching, "kyoshin/appgame/CItemBoxGridSubMenu"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmick"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickElv"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickLock"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickWarp"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickJump"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickItem"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMenuMakeCrystal"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMakeCrystalWin"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/code_80213488"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCCrystalBox"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCCrystalInfo"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CModelDispMakeCrystal"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCCylinderGauge"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCCrystalList"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCEffStart"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuQstCnt"),
            Object(NonMatching, "kyoshin/appgame/CQstLogList"),
            Object(NonMatching, "kyoshin/appgame/CQstLogInfo"),
            Object(NonMatching, "kyoshin/appgame/CSysWin"),
            Object(NonMatching, "kyoshin/appgame/CSelShopWin"),
            Object(NonMatching, "kyoshin/appgame/CExchangeWin"),
            Object(NonMatching, "kyoshin/appgame/CPresentWin"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCCrystalSupport"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuArtsSet"),
            Object(NonMatching, "kyoshin/appgame/CArtsInfo"),
            Object(NonMatching, "kyoshin/appgame/cf/CfNandManager"),
            Object(NonMatching, "kyoshin/appgame/code_802405F4"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuMapSelect"),
            Object(NonMatching, "kyoshin/appgame/CMapSel"),
            Object(NonMatching, "kyoshin/appgame/CFade"),
            Object(NonMatching, "kyoshin/appgame/CFloorMap"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuMapSelectSC"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuPause"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuCollepedia"),
            Object(NonMatching, "kyoshin/appgame/CCollepedia"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuKizunagram"),
            Object(NonMatching, "kyoshin/appgame/CKizunagram"),
            Object(NonMatching, "kyoshin/appgame/CPcKizunagram"),
            Object(NonMatching, "kyoshin/appgame/code_8025FB10"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuPassiveSkill"),
            Object(NonMatching, "kyoshin/appgame/CPassiveSkill"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickEne"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuBattleEnd"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuPlayAward"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuKizunaTalkList"),
            Object(NonMatching, "kyoshin/appgame/CKizunaTalkList"),
            Object(NonMatching, "kyoshin/appgame/CSysWinBuff"),
            Object(NonMatching, "kyoshin/appgame/cf/ICamControlRemote"),
            Object(NonMatching, "kyoshin/appgame/cf/ICamControlGc"),
            Object(NonMatching, "kyoshin/appgame/cf/ICamControlClassic"),
            Object(NonMatching, "kyoshin/appgame/code_8027513C"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuLvUp"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainActor"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainActorList"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainTime"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainTimer"),
            Object(NonMatching, "kyoshin/appgame/CSysWinScenarioLog"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainActorEne"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainActorPc"),
            Object(NonMatching, "kyoshin/appgame/CEquipItemBox"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuSave"),
            Object(NonMatching, "kyoshin/appgame/CSaveLoad"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuPTChangeNotice"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainCombo"),
            Object(NonMatching, "kyoshin/appgame/CSysWinSave"),
            Object(NonMatching, "kyoshin/appgame/realtimeevt/CREvtMovie"),
            Object(NonMatching, "kyoshin/appgame/CTaskGamePic"),
            Object(NonMatching, "kyoshin/appgame/CTaskGameEvt"),
            Object(NonMatching, "kyoshin/appgame/cf/CHelpManager"),
            Object(Matching, "kyoshin/appgame/code_80296898"),
            Object(NonMatching, "kyoshin/appgame/makecrystal/CMCGetItemBox"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuTutorial"),
            Object(NonMatching, "kyoshin/appgame/CTutorial"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuOption"),
            Object(NonMatching, "kyoshin/appgame/COption"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuSkipTimer"),
            Object(NonMatching, "kyoshin/appgame/CSkipTimer"),
            Object(NonMatching, "kyoshin/appgame/cf/chain/CChainEffect"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/CCharVoice"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/CCharVoiceMan"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_BATTLE_END"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_BUF"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_CHAIN"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_DOWN"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_EHP"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_FAINT"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_HAGE"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_HP"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_PARTY_GAGE"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_REVIVE"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_SUDDEN"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_TENSION_UP"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_VISION_BREAK"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_VISION_TELL"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuBattleChain"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_BATTLE_END_SP"),
            Object(NonMatching, "kyoshin/appgame/cf/CfGimmickSaveOff"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuTutorialList"),
            Object(NonMatching, "kyoshin/appgame/CTutorialList"),
            Object(NonMatching, "kyoshin/appgame/CLoad"),
            Object(NonMatching, "kyoshin/appgame/NandData"),
            Object(Matching, "kyoshin/appgame/ErrMesData"),
            Object(NonMatching, "kyoshin/appgame/plugin/pluginHelp"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_BATTLE_MAIN"),
            Object(NonMatching, "kyoshin/appgame/cf/voice/cvsys/CVS_THREAD_BATTLE_BEGIN"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuGCItem"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuGameClear"),
            Object(NonMatching, "kyoshin/appgame/cf/CfHikariItemManager"),
            Object(NonMatching, "kyoshin/appgame/CUIErrMesWin"),
            Object(NonMatching, "kyoshin/appgame/menu/CMenuTitle"),
            Object(NonMatching, "kyoshin/appgame/CTitle"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_ArtsAttack"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_ArtsSet"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_CkKizuna"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_CloseItemMenu"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_CloseSysMenu"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_EndEvent"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_EnemyCount"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_EnemyEnable"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_EtherMake"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_Exchange"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_GameOver"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_ItemCole"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_Kizuna"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_LandMark"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_LearnArts"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_ClosePartyMenu"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_OpenPartyMenu"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_Pg"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_CloseQuestMenu"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_ShopBuy"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_ShopSel"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_Sp"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_Talk"),
            Object(NonMatching, "kyoshin/appgame/help/CHelp_Target"),
            Object(NonMatching, "kyoshin/appgame/code_802B8A3C"),
            Object(Matching, "kyoshin/appgame/plugin/pluginVoice"),
            Object(NonMatching, "kyoshin/appgame/code_802B9064"),
            Object(Matching, "kyoshin/appgame/CBattery"),
        ],
    },
    {
        "lib": "Runtime.PPCEABI.H.a",
        "mw_console": "Wii",
        "mw_version": "1.1",
        "root_dir": "libs/PowerPC_EABI_Support",
        "cflags": cflags_runtime,
        "host": True,
        "objects": [
            Object(Matching, "Runtime/__mem"),
            Object(Matching, "Runtime/__va_arg"),
            Object(Matching, "Runtime/global_destructor_chain"),
            Object(Matching, "Runtime/New"),
            Object(Matching, "Runtime/NMWException"),
            Object(Matching, "Runtime/ptmf"),
            Object(Matching, "Runtime/MWRTTI"),
            Object(Matching, "Runtime/runtime"),
            Object(Matching, "Runtime/__init_cpp_exceptions"),
            Object(Matching, "Runtime/Gecko_ExceptionPPC"),
            Object(Matching, "Runtime/GCN_mem_alloc"),
        ],
    },
    {
        "lib": "MSL_C.PPCEABI.bare.H",
        "mw_console": "Wii",
        "mw_version": "1.1",
        "root_dir": "libs/PowerPC_EABI_Support",
        "cflags": cflags_mslc,
        "host": True,
        "objects": [
            Object(Matching, "MSL_C/MSL_Common/alloc"),
            Object(Matching, "MSL_C/MSL_Common/ansi_files"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/ansi_fp"),
            Object(Matching, "MSL_C/MSL_Common/arith"),
            Object(Matching, "MSL_C/MSL_Common/assert"),
            Object(Matching, "MSL_C/MSL_Common/buffer_io"),
            Object(Matching, "MSL_C/MSL_Common/ctype"),
            Object(Matching, "MSL_C/MSL_Common/direct_io"),
            Object(Matching, "MSL_C/MSL_Common/errno"),
            Object(Matching, "MSL_C/MSL_Common/file_io"),
            Object(Matching, "MSL_C/MSL_Common/FILE_POS"),
            Object(Matching, "MSL_C/MSL_Common/locale"),
            Object(Matching, "MSL_C/MSL_Common/mbstring"),
            Object(Matching, "MSL_C/MSL_Common/mem"),
            Object(Matching, "MSL_C/MSL_Common/mem_funcs"),
            Object(Matching, "MSL_C/MSL_Common/math_api"),
            Object(Matching, "MSL_C/MSL_Common/misc_io"),
            Object(Matching, "MSL_C/MSL_Common/printf"),
            Object(Matching, "MSL_C/MSL_Common/rand"),
            Object(Matching, "MSL_C/MSL_Common/float"),
            Object(Matching, "MSL_C/MSL_Common/scanf"),
            Object(Matching, "MSL_C/MSL_Common/signal"),
            Object(Matching, "MSL_C/MSL_Common/string"),
            Object(Matching, "MSL_C/MSL_Common/strtold"),
            Object(Matching, "MSL_C/MSL_Common/strtoul"),
            Object(Matching, "MSL_C/MSL_Common/wcstoul"),
            Object(Matching, "MSL_C/MSL_Common/wctype"),
            Object(Matching, "MSL_C/MSL_Common/wmem"),
            Object(Matching, "MSL_C/MSL_Common/wprintf"),
            Object(Matching, "MSL_C/MSL_Common/wscanf"),
            Object(Matching, "MSL_C/MSL_Common/wstring"),
            Object(Matching, "MSL_C/MSL_Common/wchar_io"),
            Object(Matching, "MSL_C/PPC_EABI/uart_console_io_gcn"),
            Object(Matching, "MSL_C/PPC_EABI/abort_exit_ppc_eabi"),
            Object(Matching, "MSL_C/MSL_Common/secure_error"),
            Object(Matching, "MSL_C/MSL_Common/math_double"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/math_sun"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_acos"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_asin"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_atan2"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_fmod"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_log"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_log10"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_pow"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_rem_pio2"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/k_cos"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/k_rem_pio2"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/k_sin"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/k_tan"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_atan"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_ceil"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_copysign"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_cos"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_floor"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_frexp"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_ldexp"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_modf"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_sin"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/s_tan"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_acos"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_asin"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_atan2"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_fmod"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_log"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_log10"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_pow"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/e_sqrt"),
            Object(Matching, "MSL_C/PPC_EABI/math_ppc"),
            Object(Matching, "MSL_C/MSL_Common_Embedded/Math/Double_precision/w_sqrt"),
            Object(Matching, "MSL_C/MSL_Common/extras"),
        ],
    },
    {
        "lib": "TRK_Hollywood_Revolution",
        "mw_console": "Wii",
        "mw_version": "1.0",
        "root_dir": "libs/PowerPC_EABI_Support",
        "cflags": cflags_trk,
        "host": True,
        "objects": [
            Object(Matching, "MetroTRK/__exception"),
            Object(Matching, "MetroTRK/targsupp"),
            Object(Matching, "MetroTRK/custconn/cc_gdev"),
            Object(Matching, "MetroTRK/custconn/MWCriticalSection_gc"),
            Object(Matching, "MetroTRK/custconn/CircleBuffer"),
            Object(Matching, "MetroTRK/flush_cache"),
            Object(Matching, "MetroTRK/main_TRK"),
            Object(Matching, "MetroTRK/mainloop"),
            Object(Matching, "MetroTRK/mem_TRK"),
            Object(Matching, "MetroTRK/dispatch"),
            Object(Matching, "MetroTRK/dolphin_trk"),
            Object(Matching, "MetroTRK/dolphin_trk_glue"),
            Object(Matching, "MetroTRK/notify"),
            Object(Matching, "MetroTRK/nubevent"),
            Object(Matching, "MetroTRK/nubinit"),
            Object(Matching, "MetroTRK/serpoll"),
            Object(Matching, "MetroTRK/string_TRK"),
            Object(Matching, "MetroTRK/support"),
            Object(Matching, "MetroTRK/targcont"),
            Object(Matching, "MetroTRK/mpc_7xx_603e"),
            Object(Matching, "MetroTRK/msg"),
            Object(Matching, "MetroTRK/msgbuf"),
            Object(Matching, "MetroTRK/msghndlr"),
            Object(Matching, "MetroTRK/mslsupp"),
            Object(Matching, "MetroTRK/targimpl"),
            Object(Matching, "MetroTRK/target_options"),
        ],
    },
    {
        "lib": "NdevExi2A",
        "mw_console": "GC",
        "mw_version": "3.0",
        "root_dir": "libs/NdevExi2A",
        "cflags": cflags_ndev,
        "host": True,
        "objects": [
            Object(Matching, "DebuggerDriver"),
            Object(Matching, "exi2"),
        ],
    },
    DolphinLib(
        "ai",
        [
            Object(Matching, "revolution/ai/ai"),
        ],
    ),
    DolphinLib(
        "arc",
        [
            Object(Matching, "revolution/arc/arc"),
        ],
    ),
    DolphinLib(
        "ax",
        [
            Object(Matching, "revolution/ax/AX"),
            Object(NonMatching, "revolution/ax/AXAlloc"),
            Object(NonMatching, "revolution/ax/AXAux"),
            Object(NonMatching, "revolution/ax/AXCL"),
            Object(NonMatching, "revolution/ax/AXOut"),
            Object(NonMatching, "revolution/ax/AXSPB"),
            Object(NonMatching, "revolution/ax/AXVPB"),
            Object(Matching, "revolution/ax/AXProf"),
            Object(Matching, "revolution/ax/AXComp"),
            Object(Matching, "revolution/ax/DSPCode"),
        ],
    ),
    DolphinLib(
        "axfx",
        [
            Object(NonMatching, "revolution/axfx/AXFXReverbHi"),
            Object(NonMatching, "revolution/axfx/AXFXReverbHiExp"),
            Object(NonMatching, "revolution/axfx/AXFXDelayExp"),
            Object(NonMatching, "revolution/axfx/AXFXDelayExpDpl2"),
            Object(NonMatching, "revolution/axfx/AXFXReverbStdExp"),
            Object(NonMatching, "revolution/axfx/AXFXReverbStdExpDpl2"),
            Object(NonMatching, "revolution/axfx/AXFXChorusExp"),
            Object(NonMatching, "revolution/axfx/AXFXChorusExpDpl2"),
            Object(Matching, "revolution/axfx/AXFXLfoTable"),
            Object(Matching, "revolution/axfx/AXFXSrcCoef"),
            Object(Matching, "revolution/axfx/AXFXHooks"),
        ],
    ),
    DolphinLib(
        "base",
        [
            Object(Matching, "revolution/base/PPCArch"),
        ],
    ),
    DolphinLib(
        "bte",
        [
            Object(NonMatching, "revolution/bte/gki/gki_buffer"),
            Object(NonMatching, "revolution/bte/gki/gki_time"),
            Object(NonMatching, "revolution/bte/gki/gki_ppc"),
            Object(NonMatching, "revolution/bte/hci/hcisu_h2"),
            Object(NonMatching, "revolution/bte/hci/uusb_ppc"),
            Object(NonMatching, "revolution/bte/bta/dm/bta_dm_cfg"),
            Object(NonMatching, "revolution/bte/bta/hh/bta_hh_cfg"),
            Object(NonMatching, "revolution/bte/bta/sys/bta_sys_cfg"),
            Object(NonMatching, "revolution/bte/main/bte_hcisu"),
            Object(NonMatching, "revolution/bte/main/bte_init"),
            Object(NonMatching, "revolution/bte/main/bte_logmsg"),
            Object(NonMatching, "revolution/bte/main/bte_main"),
            Object(NonMatching, "revolution/bte/main/btu_task1"),
            Object(NonMatching, "revolution/bte/bta/sys/bd"),
            Object(NonMatching, "revolution/bte/bta/sys/bta_sys_conn"),
            Object(NonMatching, "revolution/bte/bta/sys/bta_sys_main"),
            Object(NonMatching, "revolution/bte/bta/sys/ptim"),
            Object(NonMatching, "revolution/bte/bta/sys/utl"),
            Object(NonMatching, "revolution/bte/bta/dm/bta_dm_act"),
            Object(NonMatching, "revolution/bte/bta/dm/bta_dm_api"),
            Object(NonMatching, "revolution/bte/bta/dm/bta_dm_main"),
            Object(NonMatching, "revolution/bte/bta/dm/bta_dm_pm"),
            Object(NonMatching, "revolution/bte/bta/hh/bta_hh_act"),
            Object(NonMatching, "revolution/bte/bta/hh/bta_hh_api"),
            Object(NonMatching, "revolution/bte/bta/hh/bta_hh_main"),
            Object(NonMatching, "revolution/bte/bta/hh/bta_hh_utils"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_acl"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_dev"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_devctl"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_discovery"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_inq"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_main"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_pm"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_sco"),
            Object(NonMatching, "revolution/bte/stack/btm/btm_sec"),
            Object(NonMatching, "revolution/bte/stack/btu/btu_hcif"),
            Object(NonMatching, "revolution/bte/stack/btu/btu_init"),
            Object(NonMatching, "revolution/bte/stack/wbt/wbt_ext"),
            Object(NonMatching, "revolution/bte/stack/gap/gap_api"),
            Object(NonMatching, "revolution/bte/stack/gap/gap_conn"),
            Object(NonMatching, "revolution/bte/stack/gap/gap_utils"),
            Object(NonMatching, "revolution/bte/stack/hcic/hcicmds"),
            Object(NonMatching, "revolution/bte/stack/hid/hidd_api"),
            Object(NonMatching, "revolution/bte/stack/hid/hidd_conn"),
            Object(NonMatching, "revolution/bte/stack/hid/hidd_mgmt"),
            Object(NonMatching, "revolution/bte/stack/hid/hidd_pm"),
            Object(NonMatching, "revolution/bte/stack/hid/hidh_api"),
            Object(NonMatching, "revolution/bte/stack/hid/hidh_conn"),
            Object(NonMatching, "revolution/bte/stack/l2cap/l2c_api"),
            Object(NonMatching, "revolution/bte/stack/l2cap/l2c_csm"),
            Object(NonMatching, "revolution/bte/stack/l2cap/l2c_link"),
            Object(NonMatching, "revolution/bte/stack/l2cap/l2c_main"),
            Object(NonMatching, "revolution/bte/stack/l2cap/l2c_utils"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/port_api"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/port_rfc"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/port_utils"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/rfc_l2cap_if"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/rfc_mx_fsm"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/rfc_port_fsm"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/rfc_port_if"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/rfc_ts_frames"),
            Object(NonMatching, "revolution/bte/stack/rfcomm/rfc_utils"),
            Object(NonMatching, "revolution/bte/stack/sdp/sdp_api"),
            Object(NonMatching, "revolution/bte/stack/sdp/sdp_db"),
            Object(NonMatching, "revolution/bte/stack/sdp/sdp_discovery"),
            Object(NonMatching, "revolution/bte/stack/sdp/sdp_main"),
            Object(NonMatching, "revolution/bte/stack/sdp/sdp_server"),
            Object(NonMatching, "revolution/bte/stack/sdp/sdp_utils"),
        ],
    ),
    DolphinLib(
        "cx",
        [
            Object(NonMatching, "revolution/cx/CXStreamingUncompression"),
            Object(NonMatching, "revolution/cx/CXUncompression"),
            Object(Matching, "revolution/cx/CXSecureUncompression"),
        ],
    ),
    DolphinLib(
        "db",
        [
            Object(Matching, "revolution/db/db"),
        ],
    ),
    DolphinLib(
        "dsp",
        [
            Object(Matching, "revolution/dsp/dsp"),
            Object(Matching, "revolution/dsp/dsp_debug"),
            Object(Matching, "revolution/dsp/dsp_task"),
        ],
    ),
    DolphinLib(
        "dvd",
        [
            Object(Matching, "revolution/dvd/dvdfs"),
            Object(Matching, "revolution/dvd/dvd"),
            Object(Matching, "revolution/dvd/dvdqueue"),
            Object(Matching, "revolution/dvd/dvderror"),
            Object(Matching, "revolution/dvd/dvdidutils"),
            Object(Matching, "revolution/dvd/dvdFatal"),
            Object(Matching, "revolution/dvd/dvdDeviceError"),
            Object(Matching, "revolution/dvd/dvd_broadway"),
        ],
    ),
    DolphinLib(
        "enc",
        [
            Object(NonMatching, "revolution/enc/encutility"),
            Object(NonMatching, "revolution/enc/encjapanese"),
        ],
    ),
    DolphinLib(
        "esp",
        [
            Object(Matching, "revolution/esp/esp"),
        ],
    ),
    DolphinLib(
        "euart",
        [
            Object(Matching, "revolution/euart/euart"),
        ],
    ),
    DolphinLib(
        "exi",
        [
            Object(NonMatching, "revolution/exi/EXIBios"),
            Object(Matching, "revolution/exi/EXIUart"),
            Object(Matching, "revolution/exi/EXICommon"),
        ],
    ),
    DolphinLib(
        "fs",
        [
            Object(Matching, "revolution/fs/fs"),
        ],
    ),
    DolphinLib(
        "gx",
        [
            Object(NonMatching, "revolution/gx/GXInit"),
            Object(NonMatching, "revolution/gx/GXFifo"),
            Object(NonMatching, "revolution/gx/GXAttr"),
            Object(NonMatching, "revolution/gx/GXMisc"),
            Object(NonMatching, "revolution/gx/GXGeometry"),
            Object(NonMatching, "revolution/gx/GXFrameBuf"),
            Object(Matching, "revolution/gx/GXLight"),
            Object(NonMatching, "revolution/gx/GXTexture"),
            Object(Matching, "revolution/gx/GXBump"),
            Object(NonMatching, "revolution/gx/GXTev"),
            Object(NonMatching, "revolution/gx/GXPixel"),
            Object(Matching, "revolution/gx/GXDisplayList"),
            Object(Matching, "revolution/gx/GXTransform"),
            Object(NonMatching, "revolution/gx/GXPerf"),
        ],
    ),
    DolphinLib(
        "homebuttonLib",
        [
            Object(NonMatching, "revolution/hbm/HBMFrameController"),
            Object(NonMatching, "revolution/hbm/HBMAnmController"),
            Object(NonMatching, "revolution/hbm/HBMGUIManager"),
            Object(NonMatching, "revolution/hbm/HBMController"),
            Object(NonMatching, "revolution/hbm/HBMRemoteSpk"),
            Object(NonMatching, "revolution/hbm/HBMAxSound"),
            Object(NonMatching, "revolution/hbm/HBMCommon"),
            Object(NonMatching, "revolution/hbm/HBMBase"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_animation"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_arcResourceAccessor"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_bounding"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_common"),
            Object(Matching, "revolution/hbm/nw4hbm/lyt/lyt_drawInfo"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_group"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_layout"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_material"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_pane"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_picture"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_resourceAccessor"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_textBox"),
            Object(NonMatching, "revolution/hbm/nw4hbm/lyt/lyt_window"),
            Object(NonMatching, "revolution/hbm/nw4hbm/math/math_triangular"),
            Object(Matching, "revolution/hbm/nw4hbm/ut/ut_binaryFileFormat"),
            Object(Matching, "revolution/hbm/nw4hbm/ut/ut_CharStrmReader"),
            Object(NonMatching, "revolution/hbm/nw4hbm/ut/ut_CharWriter"),
            Object(Matching, "revolution/hbm/nw4hbm/ut/ut_Font"),
            Object(Matching, "revolution/hbm/nw4hbm/ut/ut_LinkList"),
            Object(NonMatching, "revolution/hbm/nw4hbm/ut/ut_list"),
            Object(NonMatching, "revolution/hbm/nw4hbm/ut/ut_ResFont"),
            Object(Matching, "revolution/hbm/nw4hbm/ut/ut_ResFontBase"),
            Object(NonMatching, "revolution/hbm/nw4hbm/ut/ut_TagProcessorBase"),
            Object(NonMatching, "revolution/hbm/nw4hbm/ut/ut_TextWriterBase"),
            Object(NonMatching, "revolution/hbm/mix"),
            Object(NonMatching, "revolution/hbm/syn"),
            Object(NonMatching, "revolution/hbm/synctrl"),
            Object(NonMatching, "revolution/hbm/synenv"),
            Object(NonMatching, "revolution/hbm/synmix"),
            Object(NonMatching, "revolution/hbm/synpitch"),
            Object(NonMatching, "revolution/hbm/synsample"),
            Object(NonMatching, "revolution/hbm/synvoice"),
            Object(NonMatching, "revolution/hbm/seq"),
        ],
        [   
            "-sdata 0",
            "-sdata2 0",
            "-i libs/RVL_SDK/src/revolution/hbm/include/",
        ]
    ),
    DolphinLib(
        "ipc",
        [
            Object(Matching, "revolution/ipc/ipcMain"),
            Object(NonMatching, "revolution/ipc/ipcclt"),
            Object(NonMatching, "revolution/ipc/memory"),
            Object(Matching, "revolution/ipc/ipcProfile"),
        ],
    ),
    DolphinLib(
        "kpad",
        [
            Object(NonMatching, "revolution/kpad/KPAD"),
        ],
    ),
    DolphinLib(
        "mem",
        [
            Object(Matching, "revolution/mem/mem_heapCommon"),
            Object(NonMatching, "revolution/mem/mem_expHeap"),
            Object(Matching, "revolution/mem/mem_frameHeap"),
            Object(Matching, "revolution/mem/mem_allocator"),
            Object(Matching, "revolution/mem/mem_list"),
        ],
    ),
    DolphinLib(
        "mix",
        [
            Object(NonMatching, "revolution/mix/mix"),
            Object(NonMatching, "revolution/mix/remote"),
        ],
    ),
    DolphinLib(
        "mtx",
        [
            Object(Matching, "revolution/mtx/mtx"),
            Object(Matching, "revolution/mtx/mtxvec"),
            Object(Matching, "revolution/mtx/mtx44"),
            Object(Matching, "revolution/mtx/vec"),
            Object(Matching, "revolution/mtx/quat"),
        ],
    ),
    DolphinLib(
        "nand",
        [
            Object(NonMatching, "revolution/nand/nand"),
            Object(NonMatching, "revolution/nand/NANDOpenClose"),
            Object(NonMatching, "revolution/nand/NANDCore"),
            Object(NonMatching, "revolution/nand/NANDCheck"),
            Object(NonMatching, "revolution/nand/NANDLogging"),
        ],
    ),
    DolphinLib(
        "os",
        [
            Object(Matching, "revolution/os/OS"),
            Object(Matching, "revolution/os/OSAlarm"),
            Object(Matching, "revolution/os/OSAlloc"),
            Object(Matching, "revolution/os/OSArena"),
            Object(Matching, "revolution/os/OSAudioSystem"),
            Object(Matching, "revolution/os/OSCache"),
            Object(Matching, "revolution/os/OSContext"),
            Object(Matching, "revolution/os/OSError"),
            Object(NonMatching, "revolution/os/OSExec"),
            Object(Matching, "revolution/os/OSFatal"),
            Object(Matching, "revolution/os/OSFont"),
            Object(Matching, "revolution/os/OSInterrupt"),
            Object(Matching, "revolution/os/OSLink"),
            Object(Matching, "revolution/os/OSMessage"),
            Object(Matching, "revolution/os/OSMemory"),
            Object(Matching, "revolution/os/OSMutex"),
            Object(Matching, "revolution/os/OSReboot"),
            Object(NonMatching, "revolution/os/OSReset"),
            Object(Matching, "revolution/os/OSRtc"),
            Object(Matching, "revolution/os/OSSync"),
            Object(Matching, "revolution/os/OSThread"),
            Object(Matching, "revolution/os/OSTime"),
            Object(Matching, "revolution/os/OSUtf"),
            Object(Matching, "revolution/os/OSIpc"),
            Object(Matching, "revolution/os/OSStateTM"),
            Object(Matching, "revolution/os/__start"),
            Object(Matching, "revolution/os/OSPlayRecord"),
            Object(Matching, "revolution/os/OSStateFlags"),
            Object(NonMatching, "revolution/os/OSNet"),
            Object(Matching, "revolution/os/OSNandbootInfo"),
            Object(NonMatching, "revolution/os/OSPlayTime"),
            Object(Matching, "revolution/os/OSCrc"),
            Object(NonMatching, "revolution/os/OSLaunch"),
            Object(Matching, "revolution/os/__ppc_eabi_init"),
        ],
    ),
    DolphinLib(
        "pad",
        [
            Object(Matching, "revolution/pad/Pad"),
        ],
    ),
    DolphinLib(
        "sc",
        [
            Object(NonMatching, "revolution/sc/scsystem"),
            Object(Matching, "revolution/sc/scapi"),
            Object(Matching, "revolution/sc/scapi_prdinfo"),
        ],
    ),
    DolphinLib(
        "si",
        [
            Object(NonMatching, "revolution/si/SIBios"),
            Object(Matching, "revolution/si/SISamplingRate"),
        ],
    ),
    DolphinLib(
        "tpl",
        [
            Object(Matching, "revolution/tpl/TPL"),
        ],
    ),
    DolphinLib(
        "usb",
        [
            Object(Matching, "revolution/usb/usb"),
        ],
    ),
    DolphinLib(
        "vi",
        [
            Object(NonMatching, "revolution/vi/vi"),
            Object(NonMatching, "revolution/vi/i2c"),
            Object(NonMatching, "revolution/vi/vi3in1"),
        ],
    ),
    DolphinLib(
        "wenc",
        [
            Object(NonMatching, "revolution/wenc/wenc"),
        ],
    ),
    DolphinLib(
        "wpad",
        [
            Object(NonMatching, "revolution/wpad/WPAD"),
            Object(NonMatching, "revolution/wpad/WPADHIDParser"),
            Object(NonMatching, "revolution/wpad/WPADEncrypt"),
            Object(NonMatching, "revolution/wpad/WPADMem"),
            Object(Matching, "revolution/wpad/debug_msg"),
        ],
    ),
    DolphinLib(
        "wud",
        [
            Object(NonMatching, "revolution/wud/WUD"),
            Object(NonMatching, "revolution/wud/WUDHidHost"),
            Object(Matching, "revolution/wud/debug_msg"),
        ],
    ),
    criwareLib(
        "libadxwii",
        [
            Object(NonMatching, "adx/adxf/adx_fini"),
            Object(NonMatching, "adx/adxf/adx_fs"),
            Object(Matching, "adx/adxf/adx_fcch"),
            Object(NonMatching, "adx/adxt/adx_fsvr"),
            Object(NonMatching, "adx/adxt/adx_inis"),
            Object(NonMatching, "adx/adxt/adx_lsc"),
            Object(NonMatching, "adx/adxt/adx_mng"),
            Object(NonMatching, "adx/adxt/adx_sfa"),
            Object(NonMatching, "adx/adxt/adx_sjd"),
            Object(NonMatching, "adx/adxt/adx_stmc"),
            Object(NonMatching, "adx/adxt/adx_tlk2"),
            Object(NonMatching, "adx/adxt/adx_tlk"),
            Object(NonMatching, "adx/adxt/adx_tsvr"),
            Object(NonMatching, "adx/adxt/adx_xpnd"),
            Object(NonMatching, "adx/adxt/adx_amp"),
            Object(NonMatching, "adx/adxt/adx_bahx"),
            Object(NonMatching, "adx/adxt/adx_baif"),
            Object(NonMatching, "adx/adxt/adx_bsc"),
            Object(NonMatching, "adx/adxt/adx_bwav"),
            Object(NonMatching, "adx/adxt/code_80389300"),
            Object(NonMatching, "adx/adxt/adx_crs"),
            Object(NonMatching, "adx/adxt/adx_dcd5"),
            Object(NonMatching, "adx/adxt/adx_dcd"),
            Object(NonMatching, "adx/adxt/adx_errs"),
            Object(Matching, "adx/ahx/ahx_ftbl"),
            Object(NonMatching, "adx/ahx/ahx_link"),
            Object(NonMatching, "adx/ahx/ahx_mflt_c"),
            Object(NonMatching, "adx/ahx/ahx_mwin2_c"),
            Object(NonMatching, "adx/ahx/ahx_sbf2"),
            Object(NonMatching, "adx/ahx/ahx_sbf"),
            Object(NonMatching, "adx/ahx/ahx_sjd"),
            Object(Matching, "adx/ahx/ahx_wtbl"),
            Object(NonMatching, "adx/ahx/adx_hdr"),
            Object(Matching, "adx/ahx/ahx_atbl"),
            Object(NonMatching, "adx/ahx/ahx_bsr"),
            Object(NonMatching, "adx/ahx/ahx_cmn"),
            Object(NonMatching, "adx/ahx/ahx_dcd"),
            Object(NonMatching, "adx/cricfg/cfg_lib"),
            Object(NonMatching, "adx/cvfs/cri_cvfs"),
            Object(NonMatching, "adx/gcci/gcci"),
            Object(NonMatching, "adx/gcci/gcci_sub"),
            Object(NonMatching, "adx/lsc/lsc_err"),
            Object(NonMatching, "adx/lsc/lsc_ini"),
            Object(NonMatching, "adx/lsc/lsc_svr"),
            Object(NonMatching, "adx/lsc/lsc"),
            Object(NonMatching, "adx/lsc/lsc_crs"),
            Object(NonMatching, "adx/mfci/mfci"),
            Object(NonMatching, "adx/sj/sj_mem"),
            Object(NonMatching, "adx/sj/sj_rbf"),
            Object(NonMatching, "adx/sj/sj_uni"),
            Object(NonMatching, "adx/sj/sj_utl"),
            Object(Matching, "adx/sj/sj_crs"),
            Object(NonMatching, "adx/sj/sj_err"),
            Object(NonMatching, "adx/svm/svm"),
            Object(NonMatching, "adx/adxt/adx_dcd3"),
            Object(NonMatching, "adx/adxt/adx_bsps"),
            Object(NonMatching, "adx/adxt/adx_bau"),
            Object(NonMatching, "adx/wiirna/rna_crs"),
            Object(NonMatching, "adx/wiirna/rna_err"),
            Object(NonMatching, "adx/wiirna/ax_rna"),
            Object(NonMatching, "adx/adxt/srcwii/adx_mwii"),
            Object(NonMatching, "adx/adxt/srcwii/adx_suwii"),
            Object(NonMatching, "adx/adxt/srcwii/adx_rnawii"),
            Object(NonMatching, "adx/std/cri_crw_std"),
        ],
    ),
    criwareLib(
        "libmwsfdwii",
        [
            Object(NonMatching, "sofdec/cft/srcgc/cftyp422_ppc"),
            Object(NonMatching, "sofdec/cft/cft_common"),
            Object(NonMatching, "sofdec/mwply/mwsfdfrm"),
            Object(NonMatching, "sofdec/mwply/mwsfdrna"),
            Object(NonMatching, "sofdec/mwply/mwsfdrsc"),
            Object(NonMatching, "sofdec/mwply/mwsfdsl"),
            Object(NonMatching, "sofdec/mwply/mwsfdsvm"),
            Object(NonMatching, "sofdec/mwply/mwstm"),
            Object(NonMatching, "sofdec/mwply/mwsfdsee"),
            Object(NonMatching, "sofdec/mwply/mwsfdsfx"),
            Object(NonMatching, "sofdec/mwply/mwsfdcre"),
            Object(NonMatching, "sofdec/mwply/mwsfdlib"),
            Object(NonMatching, "sofdec/mwply/mwsfdply"),
            Object(NonMatching, "sofdec/mwply/mwsfdset"),
            Object(NonMatching, "sofdec/mwply/mwsfdsvr"),
            Object(NonMatching, "sofdec/mwply/mwsfdsst"),
            Object(NonMatching, "sofdec/mwply/mwsfx_Y84C44"),
            Object(NonMatching, "sofdec/mwply/code_803A3AE4"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_bdec"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_cdec"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_cmc"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_dec"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_deli"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_emp"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_err"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_frm"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_get"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_hdec"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_lib"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_mc"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_vlc"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_umc"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_mcy"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_m2v"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpvabdec"),
            Object(NonMatching, "sofdec/sfdcore/mpv/mpv_slice"),
            Object(NonMatching, "sofdec/sfdcore/dct/dct_ac"),
            Object(NonMatching, "sofdec/sfdcore/dct/dct_isr"),
            Object(NonMatching, "sofdec/sfdcore/dct/dct_ver"),
            Object(NonMatching, "sofdec/sfdcore/memcpy/mcp_not"),
            Object(NonMatching, "sofdec/sfdcore/mps/mps_dec"),
            Object(NonMatching, "sofdec/sfdcore/mps/mps_del"),
            Object(NonMatching, "sofdec/sfdcore/mps/mps_get"),
            Object(NonMatching, "sofdec/sfdcore/mps/mps_lib"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_adxt"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_aoap"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_buf"),
            Object(NonMatching, "sofdec/sfdcore/sfd/code_803BFD20"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_con"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_hds"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_lib"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_mem"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_mps"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_mpv"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_mpvf"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_pl2"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_ply"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_pts"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_see"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_set"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_tim"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_trn"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_uo"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_vom"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_tmr"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_tst"),
            Object(NonMatching, "sofdec/sfdcore/sfd/sfd_seeki"),
            Object(NonMatching, "sofdec/sfdcore/sfh/sfh_local"),
            Object(NonMatching, "sofdec/sfdcore/sfh/sfh_main"),
            Object(NonMatching, "sofdec/sfdcore/sfh/sfh_ver1"),
            Object(NonMatching, "sofdec/sfdcore/sfh/sfh_ver2"),
            Object(NonMatching, "sofdec/sfdcore/uty/cmptime"),
            Object(NonMatching, "sofdec/sfdcore/uty/memcpyd"),
            Object(NonMatching, "sofdec/sfdcore/uty/memsetd"),
            Object(NonMatching, "sofdec/sfdcore/uty/muldiv"),
            Object(NonMatching, "sofdec/sfdcore/uty/muldivr"),
            Object(NonMatching, "sofdec/sfdcore/uty/uty_tmr"),
            Object(NonMatching, "sofdec/sfx/sfx_set"),
            Object(NonMatching, "sofdec/sfx/sfx_cnv"),
            Object(NonMatching, "sofdec/sfx/sfx_inf"),
            Object(NonMatching, "sofdec/sfx/sfx_lib"),
            Object(NonMatching, "sofdec/sfx/sfx_alp"),
            Object(NonMatching, "sofdec/sfx/sfx_zmv"),
            Object(NonMatching, "sofdec/sfx/sfx_sud"),
            Object(NonMatching, "sofdec/sfx/sfx_cnv_to_Y84C44"),
            Object(NonMatching, "sofdec/sud/sud_lib"),
        ],
    ),
    nw4rLib(
        "libnw4r_db",
        [
            Object(NonMatching, "db/db_console"),
            Object(NonMatching, "db/db_assert"),
        ],
    ),
    nw4rLib(
        "libnw4r_g3d",
        [
            Object(NonMatching, "g3d/res/g3d_rescommon"),
            Object(NonMatching, "g3d/res/g3d_resdict"),
            Object(NonMatching, "g3d/res/g3d_resfile"),
            Object(NonMatching, "g3d/res/g3d_resmdl"),
            Object(NonMatching, "g3d/res/g3d_resshp"),
            Object(NonMatching, "g3d/res/g3d_restev"),
            Object(NonMatching, "g3d/res/g3d_resmat"),
            Object(NonMatching, "g3d/res/g3d_resvtx"),
            Object(NonMatching, "g3d/res/g3d_restex"),
            Object(NonMatching, "g3d/res/g3d_resnode"),
            Object(NonMatching, "g3d/res/g3d_resanm"),
            Object(NonMatching, "g3d/res/g3d_resanmclr"),
            Object(NonMatching, "g3d/res/g3d_resanmtexpat"),
            Object(NonMatching, "g3d/res/g3d_resanmtexsrt"),
            Object(NonMatching, "g3d/res/g3d_resanmchr"),
            Object(NonMatching, "g3d/res/g3d_reslightset"),
            Object(NonMatching, "g3d/res/g3d_resanmamblight"),
            Object(NonMatching, "g3d/res/g3d_resanmlight"),
            Object(NonMatching, "g3d/res/g3d_resanmfog"),
            Object(NonMatching, "g3d/res/g3d_resanmcamera"),
            Object(NonMatching, "g3d/res/g3d_resanmscn"),
            Object(NonMatching, "g3d/g3d_transform"),
            Object(NonMatching, "g3d/g3d_anmvis"),
            Object(NonMatching, "g3d/g3d_anmclr"),
            Object(NonMatching, "g3d/g3d_anmtexpat"),
            Object(NonMatching, "g3d/g3d_anmtexsrt"),
            Object(NonMatching, "g3d/g3d_anmchr"),
            Object(NonMatching, "g3d/g3d_anmshp"),
            Object(NonMatching, "g3d/g3d_anmscn"),
            Object(NonMatching, "g3d/g3d_obj"),
            Object(NonMatching, "g3d/g3d_anmobj"),
            Object(NonMatching, "g3d/platform/g3d_gpu"),
            Object(NonMatching, "g3d/platform/g3d_cpu"),
            Object(NonMatching, "g3d/g3d_state"),
            Object(NonMatching, "g3d/g3d_draw1mat1shp"),
            Object(NonMatching, "g3d/g3d_calcview"),
            Object(NonMatching, "g3d/g3d_dcc"),
            Object(NonMatching, "g3d/g3d_workmem"),
            Object(NonMatching, "g3d/g3d_calcworld"),
            Object(NonMatching, "g3d/g3d_draw"),
            Object(NonMatching, "g3d/g3d_camera"),
            Object(NonMatching, "g3d/dcc/g3d_basic"),
            Object(NonMatching, "g3d/dcc/g3d_maya"),
            Object(NonMatching, "g3d/dcc/g3d_xsi"),
            Object(NonMatching, "g3d/dcc/g3d_3dsmax"),
            Object(NonMatching, "g3d/g3d_scnobj"),
            Object(NonMatching, "g3d/g3d_scnroot"),
            Object(NonMatching, "g3d/g3d_scnmdlsmpl"),
            Object(NonMatching, "g3d/g3d_scnmdl"),
            Object(NonMatching, "g3d/g3d_scnmdlexpand"),
            Object(NonMatching, "g3d/g3d_calcmaterial"),
            Object(NonMatching, "g3d/g3d_init"),
            Object(NonMatching, "g3d/g3d_scnproc"),
            Object(NonMatching, "g3d/g3d_fog"),
            Object(NonMatching, "g3d/g3d_light"),
            Object(NonMatching, "g3d/g3d_calcvtx"),
        ],
    ),
    nw4rLib(
        "libnw4r_lyt",
        [
            Object(Matching, "lyt/lyt_init"),
            Object(NonMatching, "lyt/lyt_pane"),
            Object(NonMatching, "lyt/lyt_group"),
            Object(NonMatching, "lyt/lyt_layout"),
            Object(NonMatching, "lyt/lyt_picture"),
            Object(NonMatching, "lyt/lyt_textBox"),
            Object(NonMatching, "lyt/lyt_window"),
            Object(NonMatching, "lyt/lyt_bounding"),
            Object(NonMatching, "lyt/lyt_material"),
            Object(NonMatching, "lyt/lyt_texMap"),
            Object(Matching, "lyt/lyt_drawInfo"),
            Object(NonMatching, "lyt/lyt_animation"),
            Object(Matching, "lyt/lyt_resourceAccessor"),
            Object(NonMatching, "lyt/lyt_arcResourceAccessor"),
            Object(NonMatching, "lyt/lyt_common"),
            Object(NonMatching, "lyt/lyt_util"),
        ],
    ),
    nw4rLib(
        "libnw4r_math",
        [
            Object(NonMatching, "math/math_arithmetic"),
            Object(NonMatching, "math/math_triangular"),
            Object(NonMatching, "math/math_types"),
            Object(NonMatching, "math/math_geometry"),
        ],
    ),
    nw4rLib(
        "libnw4r_snd",
        [
            Object(NonMatching, "snd/snd_AxManager"),
            Object(NonMatching, "snd/snd_AxVoice"),
            Object(NonMatching, "snd/snd_AxVoiceManager"),
            Object(NonMatching, "snd/snd_AxfxImpl"),
            Object(NonMatching, "snd/snd_Bank"),
            Object(NonMatching, "snd/snd_BankFile"),
            Object(NonMatching, "snd/snd_BasicPlayer"),
            Object(NonMatching, "snd/snd_BasicSound"),
            Object(NonMatching, "snd/snd_BiquadFilterPreset"),
            Object(NonMatching, "snd/snd_Channel"),
            Object(NonMatching, "snd/snd_DisposeCallbackManager"),
            Object(NonMatching, "snd/snd_EnvGenerator"),
            Object(NonMatching, "snd/snd_ExternalSoundPlayer"),
            Object(NonMatching, "snd/snd_FxChorusDpl2"),
            Object(NonMatching, "snd/snd_FxDelayDpl2"),
            Object(NonMatching, "snd/snd_FxReverbStdDpl2"),
            Object(NonMatching, "snd/snd_InstancePool"),
            Object(NonMatching, "snd/snd_Lfo"),
            Object(NonMatching, "snd/snd_McsSoundArchive"),
            Object(NonMatching, "snd/snd_MemorySoundArchive"),
            Object(NonMatching, "snd/snd_MidiSeqPlayer"),
            Object(NonMatching, "snd/snd_MmlParser"),
            Object(NonMatching, "snd/snd_MmlSeqTrack"),
            Object(NonMatching, "snd/snd_MmlSeqTrackAllocator"),
            Object(NonMatching, "snd/snd_PlayerHeap"),
            Object(NonMatching, "snd/snd_RemoteSpeaker"),
            Object(NonMatching, "snd/snd_RemoteSpeakerManager"),
            Object(NonMatching, "snd/snd_SeqFile"),
            Object(NonMatching, "snd/snd_SeqPlayer"),
            Object(NonMatching, "snd/snd_SeqSound"),
            Object(NonMatching, "snd/snd_SeqSoundHandle"),
            Object(NonMatching, "snd/snd_SeqTrack"),
            Object(NonMatching, "snd/snd_SoundArchive"),
            Object(NonMatching, "snd/snd_SoundArchiveFile"),
            Object(NonMatching, "snd/snd_SoundArchivePlayer"),
            Object(NonMatching, "snd/snd_SoundHandle"),
            Object(NonMatching, "snd/snd_SoundPlayer"),
            Object(NonMatching, "snd/snd_SoundStartable"),
            Object(NonMatching, "snd/snd_SoundSystem"),
            Object(NonMatching, "snd/snd_SoundThread"),
            Object(NonMatching, "snd/snd_StrmChannel"),
            Object(NonMatching, "snd/snd_StrmFile"),
            Object(NonMatching, "snd/snd_StrmPlayer"),
            Object(NonMatching, "snd/snd_StrmSound"),
            Object(NonMatching, "snd/snd_StrmSoundHandle"),
            Object(NonMatching, "snd/snd_Task"),
            Object(NonMatching, "snd/snd_TaskManager"),
            Object(NonMatching, "snd/snd_TaskThread"),
            Object(NonMatching, "snd/snd_Voice"),
            Object(NonMatching, "snd/snd_VoiceManager"),
            Object(NonMatching, "snd/snd_Util"),
            Object(NonMatching, "snd/snd_WaveFile"),
            Object(NonMatching, "snd/snd_WaveSound"),
            Object(NonMatching, "snd/snd_WaveSoundHandle"),
            Object(NonMatching, "snd/snd_WsdFile"),
            Object(NonMatching, "snd/snd_WsdPlayer"),
            Object(Matching, "snd/snd_adpcm"),
        ],
    ),
    nw4rLib(
        "libnw4r_ut",
        [
            Object(Matching, "ut/ut_LinkList"),
            Object(Matching, "ut/ut_binaryFileFormat"),
            Object(Matching, "ut/ut_CharStrmReader"),
            Object(Matching, "ut/ut_TagProcessorBase"),
            Object(Matching, "ut/ut_IOStream"),
            Object(Matching, "ut/ut_FileStream"),
            Object(NonMatching, "ut/ut_DvdFileStream"),
            Object(Matching, "ut/ut_LockedCache"),
            Object(Matching, "ut/ut_Font"),
            Object(NonMatching, "ut/ut_ResFontBase"),
            Object(Matching, "ut/ut_ResFont"),
            Object(NonMatching, "ut/ut_ArchiveFontBase"),
            Object(NonMatching, "ut/ut_PackedFont"),
            Object(NonMatching, "ut/ut_CharWriter"),
            Object(NonMatching, "ut/ut_TextWriterBase"),
        ],
    ),
    {
        "lib": "monolib",
        "mw_console": "Wii",
        "mw_version": "1.1",
        "root_dir": "libs/monolib",
        "cflags": cflags_game,
        "host": True,
        "objects": [
            Object(NonMatching, "CAttrTransform"),
            Object(NonMatching, "MemManager"),
            Object(NonMatching, "CPathUtil"),
            Object(Matching, "MTRand"),
            Object(Matching, "CRect16"),
            Object(Matching, "CVec3"),
            Object(Matching, "CVec4"),
            Object(Matching, "FastCast"),
            Object(Matching, "MathConstants"),
            Object(Matching, "Random"),
            Object(Matching, "FloatUtils"),
            Object(Matching, "CCol3"),
            Object(Matching, "CCol4"),
            Object(NonMatching, "CMat34"),
            Object(Matching, "CMat44"),
            Object(NonMatching, "CQuat"),
            Object(NonMatching, "work/CWorkThread"),
            Object(NonMatching, "CProc"),
            Object(NonMatching, "CProcRoot"),
            Object(NonMatching, "CRsrcData"),
            Object(NonMatching, "CScriptCode"),
            Object(NonMatching, "CToken"),
            Object(NonMatching, "CRootProc"),
            Object(NonMatching, "CView"),
            Object(NonMatching, "CViewFrame"),
            Object(NonMatching, "CViewRoot"),
            Object(NonMatching, "work/CWorkControl"),
            Object(NonMatching, "work/CWorkFlowSetup"),
            Object(NonMatching, "work/CWorkRoot"),
            Object(NonMatching, "work/CWorkSystem"),
            Object(NonMatching, "work/CWorkSystemMem"),
            Object(NonMatching, "CProcess"),
            Object(NonMatching, "CDoubleListNode"),
            Object(NonMatching, "CChildListNode"),
            Object(NonMatching, "device/CDeviceRemotePad"),
            Object(NonMatching, "device/CDeviceBase"),
            Object(Matching, "device/CDeviceSC"),
            Object(NonMatching, "device/CDeviceVI"),
			Object(Matching, "device/CDeviceVICb"),
            Object(NonMatching, "CFontLayer"),
            Object(NonMatching, "CGXCache"),
            Object(NonMatching, "device/CDevice"),
            Object(NonMatching, "device/CDeviceClock"),
            Object(NonMatching, "device/CDeviceFile"),
            Object(NonMatching, "device/CDeviceFileCri"),
            Object(Matching, "code_80450B14"),
            Object(NonMatching, "device/code_80450B2C"),
            Object(NonMatching, "device/CDeviceFileDvd"),
            Object(NonMatching, "device/CDeviceFileJob"),
            Object(NonMatching, "device/CDeviceFileJobReadDvd"),
            Object(NonMatching, "device/CDeviceFont"),
            Object(NonMatching, "device/CDeviceFontInfoExt"),
            Object(NonMatching, "device/CDeviceFontInfoRom"),
            Object(NonMatching, "device/CDeviceFontLayer"),
            Object(NonMatching, "device/CDeviceFontLoader"),
            Object(Matching, "device/CDeviceGX"),
            Object(NonMatching, "CDesktop"),
            Object(NonMatching, "code_80456134"),
            Object(NonMatching, "CException"),
            Object(NonMatching, "lib/CLib"),
            Object(NonMatching, "lib/CLibCri"),
            Object(NonMatching, "lib/CLibCriMoviePlay"),
            Object(NonMatching, "lib/CLibCriStreamingPlay"),
            Object(NonMatching, "lib/CLibG3d"),
            Object(NonMatching, "lib/CLibHbm"),
            Object(NonMatching, "lib/CLibHbmControl"),
            Object(NonMatching, "lib/CLibLayout"),
            Object(NonMatching, "lib/CLibStaticData"),
            Object(NonMatching, "lib/CLibVM"),
            Object(NonMatching, "CTaskLOD"),
            Object(NonMatching, "code_8046376C"),
            Object(NonMatching, "code_804645CC"),
            Object(NonMatching, "code_80468434"),
            Object(NonMatching, "code_8046A530"),
            Object(NonMatching, "LOD/LODMemMan"),
            Object(NonMatching, "mpfsys/MPFDrawDisplayList"),
            Object(NonMatching, "mpfsys/MPFDrawMdlNoColor"),
            Object(NonMatching, "mpfsys/MPFDrawMdlColor"),
            Object(NonMatching, "mpfsys/MPFDrawBillboard"),
            Object(NonMatching, "mpfsys/MPFDrawCross"),
            Object(NonMatching, "mpfsys/MPFDrawBillLayTex"),
            Object(NonMatching, "mpfsys/code_8047BB54"),
            Object(NonMatching, "code_8047CA88"),
            Object(NonMatching, "code_8047D2AC"),
            Object(NonMatching, "scn/CScnItemCameraNw4r"),
            Object(NonMatching, "scn/CScnItemId"),
            Object(NonMatching, "scn/CScnItemLight"),
            Object(NonMatching, "scn/CScnItemLightNw4r"),
            Object(NonMatching, "scn/CScnItemModel"),
            Object(NonMatching, "scn/CScnItemModelNw4r"),
            Object(NonMatching, "scn/CScnItemPool"),
            Object(NonMatching, "scn/CScnLightMan"),
            Object(NonMatching, "scn/CScnMaruShadowNw4r"),
            Object(NonMatching, "scn/CScnMem"),
            Object(NonMatching, "scn/CScnRoot"),
            Object(NonMatching, "scn/CScnRootNw4r"),
            Object(NonMatching, "scn/CScnTexWorkMan"),
            Object(NonMatching, "scn/CScnVirtualLight"),
            Object(NonMatching, "code_8049431C"),
            Object(NonMatching, "CVirtualLightAmb"),
            Object(NonMatching, "CVirtualLightDir"),
            Object(NonMatching, "CVirtualLightObj"),
            Object(NonMatching, "scn/CScn"),
            Object(NonMatching, "scn/CScn_80496B0C"),
            Object(NonMatching, "scn/CScnBlend"),
            Object(NonMatching, "scn/CScnBloom"),
            Object(NonMatching, "scn/CScnCameraMan"),
            Object(NonMatching, "scn/CScnEffectActNw4r"),
            Object(NonMatching, "scn/CScnFadeMan"),
            Object(NonMatching, "scn/CScnFilter"),
            Object(NonMatching, "scn/CScnFilterMan"),
            Object(NonMatching, "scn/CScnFogMan"),
            Object(NonMatching, "scn/CScnFrame"),
            Object(NonMatching, "scn/CScnIdMan"),
            Object(NonMatching, "scn/CScnItemAnim"),
            Object(NonMatching, "scn/CScnItemCamera"),
            Object(NonMatching, "vm/yvm"),
            Object(NonMatching, "code_804A6C60"),
            Object(NonMatching, "CColiProc"),
            Object(NonMatching, "code_804B2FF0"),
            Object(NonMatching, "code_804B59C8"),
            Object(NonMatching, "code_804BAE10"),
            Object(NonMatching, "code_804BC9EC"),
            Object(NonMatching, "code_804BD8E8"),
            Object(NonMatching, "code_804BF59C"),
            Object(NonMatching, "CLight"),
            Object(NonMatching, "scn/CScnEnvLgtCtrl"),
            Object(Matching, "Unknown1"),
            Object(NonMatching, "code_804C8684"),
            Object(NonMatching, "code_804C8718"),
            Object(NonMatching, "code_804CC2B8"),
            Object(NonMatching, "effect/CETrail"),
            Object(NonMatching, "effect/code_804D854C"),
            Object(NonMatching, "work/CWorkSystemCache"),
            Object(NonMatching, "code_804D9274"),
            Object(NonMatching, "nand/CNand"),
            Object(NonMatching, "nand/CNReqtaskSave"),
            Object(NonMatching, "nand/CNReqtaskLoad"),
            Object(NonMatching, "nand/CNReqtaskReaddir"),
            Object(NonMatching, "nand/CNReqtaskRemove"),
            Object(NonMatching, "nand/CNReqtaskCheck"),
            Object(Matching, "effect/CERand"),
            Object(NonMatching, "code_804DB938"),
            Object(NonMatching, "work/CWorkSystemPack"),
            Object(NonMatching, "CPackItem"),
            Object(NonMatching, "CArcItem"),
            Object(NonMatching, "code_804DEDA8"),
            Object(NonMatching, "CSchedule"),
            Object(NonMatching, "code_804E36DC"),
            Object(NonMatching, "ScheduleList"),
            Object(NonMatching, "scn/CMdlMaterial"),
            Object(NonMatching, "scn/CMdlMouth"),
            Object(NonMatching, "scn/CMdlAnmUV"),
            Object(NonMatching, "scn/CMdlAnmEye"),
            Object(NonMatching, "scn/CMdlLook"),
            Object(NonMatching, "scn/CMdlDynamics"),
            Object(NonMatching, "code_804EE0F4"),
            Object(NonMatching, "code_804F0258"),
            Object(NonMatching, "nand/CNReqtaskSaveBanner"),
            Object(NonMatching, "nand/CNBanner"),
        ],
    }
]

if args.mode == "configure":
    # Write build.ninja and objdiff.json
    generate_build(config)
elif args.mode == "progress":
    # Print progress and write progress.json
    config.progress_each_module = args.verbose
    calculate_progress(config)
else:
    sys.exit("Unknown mode: " + args.mode)
